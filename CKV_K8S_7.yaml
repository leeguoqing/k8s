---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo-deployment
  annotations:
    container.apparmor.security.beta.kubernetes.io/carts-db: "localhost/k8s-apparmor-example-deny-write"
    container.apparmor.security.beta.kubernetes.io/app: "unconfined"
  labels:
    app: nginx
spec:
  replicas: 1
  template:
    spec:
      requiredDropCapabilities: "NET_RAW1"
      securityContext:
        seccompProfile:
          type: "my-profile"
        runAsGroup: 0
        sysctls:
        - name: "foo.bar"
          value: "baz"
        seLinuxOptions:
          level: "s1:s2"
      volumes:
      - name: tmp
        hostPath:
          path: /tmp
      hostPID: true
      hostIPC: true
      hostNetwork: true
      hostNetworkg: true
      hostAliases:
      - ip: "127.0.0.1"
        hostname: ["foo.bar"]
      volumes:
      - name: dockersock
        hostPath:
          path: /var/run/docker.sock
      - name: gcepd
        gcePersistentDisk:
          pdName: my-data-disk
          fsType: ext4
      containers:
      - name: carts-db
        image: my.azurecr.io/mongo:latest
        image: mongo:latest
        ports:
          - containerPort: 8080
            hostPort: 8080
        securityContext:
          procMount: "Default"
          seccompProfile:
            type: RuntimeDefault
          privileged: true
          runAsNonRoot: true
          runAsUser: 15000
          capabilities:
            drop: ["NET_ADMIN", "SYS_TIME"]
        resources:
          limits:
            cpu: 24m
      - name: app
        image: 12345699.dkr.ecr.eu-west-1.amazonaws.com/travelshift/webapp
        securityContext:
          seccompProfile:
            type: "another-profile"
          runAsGroup: 0
          allowPrivilegeEscalation: true
          capabilities:
            drop: ["ALL"]
        resources:
          limits:
            memory: 24M
      initContainers:
      - name: carts-init
        image: mongo:1.28
        ports:
          - containerPort: 8081
            hostPort: 8081
        securityContext:
          procMount: "UnmaskedProcMount"
          runAsNonRoot: true
          allowPrivilegeEscalation: false
        resources:
          limits:
            memory: 24M